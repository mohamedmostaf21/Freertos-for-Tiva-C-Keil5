Component: ARM Compiler 5.06 update 7 (build 960) Tool: armlink [4d3601]

==============================================================================

Section Cross References

    startup_rvmdk.o(RESET) refers to startup_rvmdk.o(STACK) for StackMem
    startup_rvmdk.o(RESET) refers to port.o(.emb_text) for SVC_Handler
    startup_rvmdk.o(RESET) refers to port.o(i.SysTick_Handler) for SysTick_Handler
    startup_rvmdk.o(RESET) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    main.o(i.main) refers to main.o(i.port_init) for port_init
    main.o(i.main) refers to main.o(i.led_init) for led_init
    main.o(i.main) refers to tasks.o(i.xTaskCreate) for xTaskCreate
    main.o(i.main) refers to tasks.o(i.vTaskStartScheduler) for vTaskStartScheduler
    main.o(i.main) refers to main.o(i.vPeriodicTask) for vPeriodicTask
    main.o(i.vPeriodicTask) refers to tasks.o(i.xTaskGetTickCount) for xTaskGetTickCount
    main.o(i.vPeriodicTask) refers to main.o(i.led_toggle) for led_toggle
    main.o(i.vPeriodicTask) refers to tasks.o(i.vTaskDelayUntil) for vTaskDelayUntil
    queue.o(i.prvCopyDataFromQueue) refers to memcpya.o(.text) for __aeabi_memcpy
    queue.o(i.prvCopyDataToQueue) refers to tasks.o(i.xTaskPriorityDisinherit) for xTaskPriorityDisinherit
    queue.o(i.prvCopyDataToQueue) refers to memcpya.o(.text) for __aeabi_memcpy
    queue.o(i.prvInitialiseMutex) refers to queue.o(i.xQueueGenericSend) for xQueueGenericSend
    queue.o(i.prvInitialiseNewQueue) refers to queue.o(i.xQueueGenericReset) for xQueueGenericReset
    queue.o(i.prvIsQueueEmpty) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.prvIsQueueEmpty) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.prvIsQueueFull) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.prvIsQueueFull) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.prvNotifyQueueSetContainer) refers to queue.o(i.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(i.prvNotifyQueueSetContainer) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.prvUnlockQueue) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.prvUnlockQueue) refers to queue.o(i.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(i.prvUnlockQueue) refers to tasks.o(i.vTaskMissedYield) for vTaskMissedYield
    queue.o(i.prvUnlockQueue) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.prvUnlockQueue) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.uxQueueMessagesWaiting) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.uxQueueMessagesWaiting) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.uxQueueSpacesAvailable) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.uxQueueSpacesAvailable) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.vQueueDelete) refers to heap_1.o(i.vPortFree) for vPortFree
    queue.o(i.vQueueWaitForMessageRestricted) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.vQueueWaitForMessageRestricted) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.vQueueWaitForMessageRestricted) refers to tasks.o(i.vTaskPlaceOnEventListRestricted) for vTaskPlaceOnEventListRestricted
    queue.o(i.vQueueWaitForMessageRestricted) refers to queue.o(i.prvUnlockQueue) for prvUnlockQueue
    queue.o(i.xQueueAddToSet) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.xQueueAddToSet) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.xQueueCreateCountingSemaphore) refers to queue.o(i.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(i.xQueueCreateMutex) refers to queue.o(i.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(i.xQueueCreateMutex) refers to queue.o(i.prvInitialiseMutex) for prvInitialiseMutex
    queue.o(i.xQueueCreateSet) refers to queue.o(i.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(i.xQueueGenericCreate) refers to heap_1.o(i.pvPortMalloc) for pvPortMalloc
    queue.o(i.xQueueGenericCreate) refers to queue.o(i.prvInitialiseNewQueue) for prvInitialiseNewQueue
    queue.o(i.xQueueGenericReset) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.xQueueGenericReset) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueueGenericReset) refers to list.o(i.vListInitialise) for vListInitialise
    queue.o(i.xQueueGenericReset) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(i.xQueueGenericSend) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.xQueueGenericSend) refers to queue.o(i.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(i.xQueueGenericSend) refers to queue.o(i.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueueGenericSend) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(i.xQueueGenericSend) refers to queue.o(i.prvIsQueueFull) for prvIsQueueFull
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(i.xQueueGenericSend) refers to queue.o(i.prvUnlockQueue) for prvUnlockQueue
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    queue.o(i.xQueueGenericSendFromISR) refers to port.o(i.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(i.xQueueGenericSendFromISR) refers to queue.o(i.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(i.xQueueGenericSendFromISR) refers to queue.o(i.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(i.xQueueGenericSendFromISR) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueueGiveFromISR) refers to port.o(i.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(i.xQueueGiveFromISR) refers to queue.o(i.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(i.xQueueGiveFromISR) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueueGiveMutexRecursive) refers to tasks.o(i.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(i.xQueueGiveMutexRecursive) refers to queue.o(i.xQueueGenericSend) for xQueueGenericSend
    queue.o(i.xQueuePeek) refers to tasks.o(i.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(i.xQueuePeek) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.xQueuePeek) refers to queue.o(i.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(i.xQueuePeek) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueuePeek) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.xQueuePeek) refers to tasks.o(i.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(i.xQueuePeek) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(i.xQueuePeek) refers to tasks.o(i.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(i.xQueuePeek) refers to queue.o(i.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(i.xQueuePeek) refers to tasks.o(i.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(i.xQueuePeek) refers to queue.o(i.prvUnlockQueue) for prvUnlockQueue
    queue.o(i.xQueuePeek) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    queue.o(i.xQueuePeekFromISR) refers to port.o(i.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(i.xQueuePeekFromISR) refers to queue.o(i.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(i.xQueueReceive) refers to tasks.o(i.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(i.xQueueReceive) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.xQueueReceive) refers to queue.o(i.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(i.xQueueReceive) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueueReceive) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.xQueueReceive) refers to tasks.o(i.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(i.xQueueReceive) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(i.xQueueReceive) refers to tasks.o(i.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(i.xQueueReceive) refers to queue.o(i.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(i.xQueueReceive) refers to tasks.o(i.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(i.xQueueReceive) refers to queue.o(i.prvUnlockQueue) for prvUnlockQueue
    queue.o(i.xQueueReceive) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    queue.o(i.xQueueReceiveFromISR) refers to port.o(i.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(i.xQueueReceiveFromISR) refers to queue.o(i.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(i.xQueueReceiveFromISR) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueueRemoveFromSet) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.xQueueRemoveFromSet) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.xQueueSelectFromSet) refers to queue.o(i.xQueueReceive) for xQueueReceive
    queue.o(i.xQueueSelectFromSetFromISR) refers to queue.o(i.xQueueReceiveFromISR) for xQueueReceiveFromISR
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(i.xQueueSemaphoreTake) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.pvTaskIncrementMutexHeldCount) for pvTaskIncrementMutexHeldCount
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueueSemaphoreTake) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(i.xQueueSemaphoreTake) refers to queue.o(i.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.xTaskPriorityInherit) for xTaskPriorityInherit
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(i.xQueueSemaphoreTake) refers to queue.o(i.prvUnlockQueue) for prvUnlockQueue
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    queue.o(i.xQueueSemaphoreTake) refers to queue.o(i.prvGetDisinheritPriorityAfterTimeout) for prvGetDisinheritPriorityAfterTimeout
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.vTaskPriorityDisinheritAfterTimeout) for vTaskPriorityDisinheritAfterTimeout
    queue.o(i.xQueueTakeMutexRecursive) refers to tasks.o(i.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(i.xQueueTakeMutexRecursive) refers to queue.o(i.xQueueSemaphoreTake) for xQueueSemaphoreTake
    tasks.o(i.eTaskGetState) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.eTaskGetState) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.eTaskGetState) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.eTaskGetState) refers to tasks.o(.bss) for xSuspendedTaskList
    tasks.o(i.pcTaskGetName) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.prvAddCurrentTaskToDelayedList) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.prvAddCurrentTaskToDelayedList) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.prvAddCurrentTaskToDelayedList) refers to list.o(i.vListInsert) for vListInsert
    tasks.o(i.prvAddCurrentTaskToDelayedList) refers to tasks.o(.data) for xTickCount
    tasks.o(i.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss) for xSuspendedTaskList
    tasks.o(i.prvAddNewTaskToReadyList) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.prvAddNewTaskToReadyList) refers to tasks.o(i.prvInitialiseTaskLists) for prvInitialiseTaskLists
    tasks.o(i.prvAddNewTaskToReadyList) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.prvAddNewTaskToReadyList) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.prvAddNewTaskToReadyList) refers to tasks.o(.data) for uxCurrentNumberOfTasks
    tasks.o(i.prvAddNewTaskToReadyList) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.prvCheckTasksWaitingTermination) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.prvCheckTasksWaitingTermination) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.prvCheckTasksWaitingTermination) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.prvCheckTasksWaitingTermination) refers to tasks.o(i.prvDeleteTCB) for prvDeleteTCB
    tasks.o(i.prvCheckTasksWaitingTermination) refers to tasks.o(.bss) for xTasksWaitingTermination
    tasks.o(i.prvCheckTasksWaitingTermination) refers to tasks.o(.data) for uxCurrentNumberOfTasks
    tasks.o(i.prvDeleteTCB) refers to heap_1.o(i.vPortFree) for vPortFree
    tasks.o(i.prvIdleTask) refers to tasks.o(i.prvCheckTasksWaitingTermination) for prvCheckTasksWaitingTermination
    tasks.o(i.prvIdleTask) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.prvInitialiseNewTask) refers to list.o(i.vListInitialiseItem) for vListInitialiseItem
    tasks.o(i.prvInitialiseNewTask) refers to port.o(i.pxPortInitialiseStack) for pxPortInitialiseStack
    tasks.o(i.prvInitialiseTaskLists) refers to list.o(i.vListInitialise) for vListInitialise
    tasks.o(i.prvInitialiseTaskLists) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.prvInitialiseTaskLists) refers to tasks.o(.data) for pxDelayedTaskList
    tasks.o(i.prvResetNextTaskUnblockTime) refers to tasks.o(.data) for pxDelayedTaskList
    tasks.o(i.prvTaskIsTaskSuspended) refers to tasks.o(.bss) for xSuspendedTaskList
    tasks.o(i.pvTaskIncrementMutexHeldCount) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.ulTaskNotifyTake) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.ulTaskNotifyTake) refers to tasks.o(i.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(i.ulTaskNotifyTake) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.ulTaskNotifyTake) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.uxTaskGetNumberOfTasks) refers to tasks.o(.data) for uxCurrentNumberOfTasks
    tasks.o(i.uxTaskPriorityGet) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.uxTaskPriorityGet) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.uxTaskPriorityGet) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.uxTaskPriorityGetFromISR) refers to port.o(i.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(i.uxTaskPriorityGetFromISR) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.uxTaskResetEventItemValue) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskDelay) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(i.vTaskDelay) refers to tasks.o(i.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(i.vTaskDelay) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    tasks.o(i.vTaskDelay) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.vTaskDelayUntil) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(i.vTaskDelayUntil) refers to tasks.o(i.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(i.vTaskDelayUntil) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    tasks.o(i.vTaskDelayUntil) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.vTaskDelete) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.vTaskDelete) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.vTaskDelete) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskDelete) refers to tasks.o(i.prvDeleteTCB) for prvDeleteTCB
    tasks.o(i.vTaskDelete) refers to tasks.o(i.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(i.vTaskDelete) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.vTaskDelete) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskDelete) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.vTaskEndScheduler) refers to port.o(i.vPortEndScheduler) for vPortEndScheduler
    tasks.o(i.vTaskEndScheduler) refers to tasks.o(.data) for xSchedulerRunning
    tasks.o(i.vTaskInternalSetTimeOutState) refers to tasks.o(.data) for xNumOfOverflows
    tasks.o(i.vTaskMissedYield) refers to tasks.o(.data) for xYieldPending
    tasks.o(i.vTaskNotifyGiveFromISR) refers to port.o(i.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(i.vTaskNotifyGiveFromISR) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.vTaskNotifyGiveFromISR) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskNotifyGiveFromISR) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.vTaskNotifyGiveFromISR) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.vTaskPlaceOnEventList) refers to list.o(i.vListInsert) for vListInsert
    tasks.o(i.vTaskPlaceOnEventList) refers to tasks.o(i.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(i.vTaskPlaceOnEventList) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskPlaceOnEventListRestricted) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskPlaceOnEventListRestricted) refers to tasks.o(i.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(i.vTaskPlaceOnEventListRestricted) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskPlaceOnUnorderedEventList) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskPlaceOnUnorderedEventList) refers to tasks.o(i.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(i.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.vTaskPriorityDisinheritAfterTimeout) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.vTaskPriorityDisinheritAfterTimeout) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.vTaskPrioritySet) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.vTaskPrioritySet) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.vTaskPrioritySet) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskPrioritySet) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.vTaskPrioritySet) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskPrioritySet) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.vTaskRemoveFromUnorderedEventList) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.vTaskRemoveFromUnorderedEventList) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.vTaskResume) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.vTaskResume) refers to tasks.o(i.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(i.vTaskResume) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.vTaskResume) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskResume) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.vTaskResume) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskResume) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.vTaskSetTimeOutState) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.vTaskSetTimeOutState) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.vTaskSetTimeOutState) refers to tasks.o(.data) for xNumOfOverflows
    tasks.o(i.vTaskStartScheduler) refers to tasks.o(i.xTaskCreate) for xTaskCreate
    tasks.o(i.vTaskStartScheduler) refers to timers.o(i.xTimerCreateTimerTask) for xTimerCreateTimerTask
    tasks.o(i.vTaskStartScheduler) refers to port.o(i.xPortStartScheduler) for xPortStartScheduler
    tasks.o(i.vTaskStartScheduler) refers to tasks.o(.data) for xIdleTaskHandle
    tasks.o(i.vTaskStartScheduler) refers to tasks.o(i.prvIdleTask) for prvIdleTask
    tasks.o(i.vTaskSuspend) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.vTaskSuspend) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.vTaskSuspend) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskSuspend) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.vTaskSuspend) refers to tasks.o(i.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(i.vTaskSuspend) refers to tasks.o(i.vTaskSwitchContext) for vTaskSwitchContext
    tasks.o(i.vTaskSuspend) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskSuspend) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.vTaskSuspendAll) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.vTaskSwitchContext) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.vTaskSwitchContext) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.xTaskCheckForTimeOut) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.xTaskCheckForTimeOut) refers to tasks.o(i.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    tasks.o(i.xTaskCheckForTimeOut) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.xTaskCheckForTimeOut) refers to tasks.o(.data) for xTickCount
    tasks.o(i.xTaskCreate) refers to heap_1.o(i.pvPortMalloc) for pvPortMalloc
    tasks.o(i.xTaskCreate) refers to heap_1.o(i.vPortFree) for vPortFree
    tasks.o(i.xTaskCreate) refers to tasks.o(i.prvInitialiseNewTask) for prvInitialiseNewTask
    tasks.o(i.xTaskCreate) refers to tasks.o(i.prvAddNewTaskToReadyList) for prvAddNewTaskToReadyList
    tasks.o(i.xTaskGenericNotify) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.xTaskGenericNotify) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskGenericNotify) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskGenericNotify) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.xTaskGenericNotify) refers to tasks.o(.data) for uxTopReadyPriority
    tasks.o(i.xTaskGenericNotify) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.xTaskGenericNotifyFromISR) refers to port.o(i.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(i.xTaskGenericNotifyFromISR) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskGenericNotifyFromISR) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskGenericNotifyFromISR) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.xTaskGenericNotifyFromISR) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.xTaskGetCurrentTaskHandle) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.xTaskGetSchedulerState) refers to tasks.o(.data) for xSchedulerRunning
    tasks.o(i.xTaskGetTickCount) refers to tasks.o(.data) for xTickCount
    tasks.o(i.xTaskGetTickCountFromISR) refers to port.o(i.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(i.xTaskGetTickCountFromISR) refers to tasks.o(.data) for xTickCount
    tasks.o(i.xTaskIncrementTick) refers to tasks.o(i.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(i.xTaskIncrementTick) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskIncrementTick) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskIncrementTick) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.xTaskIncrementTick) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.xTaskNotifyStateClear) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.xTaskNotifyStateClear) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.xTaskNotifyStateClear) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.xTaskNotifyWait) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.xTaskNotifyWait) refers to tasks.o(i.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(i.xTaskNotifyWait) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.xTaskNotifyWait) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.xTaskPriorityDisinherit) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskPriorityDisinherit) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskPriorityDisinherit) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.xTaskPriorityDisinherit) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.xTaskPriorityInherit) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskPriorityInherit) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskPriorityInherit) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.xTaskPriorityInherit) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.xTaskRemoveFromEventList) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskRemoveFromEventList) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskRemoveFromEventList) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.xTaskRemoveFromEventList) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.xTaskResumeAll) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.xTaskResumeAll) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskResumeAll) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskResumeAll) refers to tasks.o(i.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(i.xTaskResumeAll) refers to tasks.o(i.xTaskIncrementTick) for xTaskIncrementTick
    tasks.o(i.xTaskResumeAll) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.xTaskResumeAll) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.xTaskResumeAll) refers to tasks.o(.bss) for xPendingReadyList
    tasks.o(i.xTaskResumeFromISR) refers to port.o(i.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(i.xTaskResumeFromISR) refers to tasks.o(i.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(i.xTaskResumeFromISR) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskResumeFromISR) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskResumeFromISR) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.xTaskResumeFromISR) refers to tasks.o(.bss) for pxReadyTasksLists
    timers.o(i.prvCheckForValidListAndQueue) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    timers.o(i.prvCheckForValidListAndQueue) refers to list.o(i.vListInitialise) for vListInitialise
    timers.o(i.prvCheckForValidListAndQueue) refers to queue.o(i.xQueueGenericCreate) for xQueueGenericCreate
    timers.o(i.prvCheckForValidListAndQueue) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    timers.o(i.prvCheckForValidListAndQueue) refers to timers.o(.data) for xTimerQueue
    timers.o(i.prvCheckForValidListAndQueue) refers to timers.o(.bss) for xActiveTimerList1
    timers.o(i.prvGetNextExpireTime) refers to timers.o(.data) for pxCurrentTimerList
    timers.o(i.prvInitialiseNewTimer) refers to timers.o(i.prvCheckForValidListAndQueue) for prvCheckForValidListAndQueue
    timers.o(i.prvInitialiseNewTimer) refers to list.o(i.vListInitialiseItem) for vListInitialiseItem
    timers.o(i.prvInsertTimerInActiveList) refers to list.o(i.vListInsert) for vListInsert
    timers.o(i.prvInsertTimerInActiveList) refers to timers.o(.data) for pxOverflowTimerList
    timers.o(i.prvProcessExpiredTimer) refers to list.o(i.uxListRemove) for uxListRemove
    timers.o(i.prvProcessExpiredTimer) refers to timers.o(i.prvInsertTimerInActiveList) for prvInsertTimerInActiveList
    timers.o(i.prvProcessExpiredTimer) refers to timers.o(i.xTimerGenericCommand) for xTimerGenericCommand
    timers.o(i.prvProcessExpiredTimer) refers to timers.o(.data) for pxCurrentTimerList
    timers.o(i.prvProcessReceivedCommands) refers to list.o(i.uxListRemove) for uxListRemove
    timers.o(i.prvProcessReceivedCommands) refers to timers.o(i.prvSampleTimeNow) for prvSampleTimeNow
    timers.o(i.prvProcessReceivedCommands) refers to timers.o(i.prvInsertTimerInActiveList) for prvInsertTimerInActiveList
    timers.o(i.prvProcessReceivedCommands) refers to timers.o(i.xTimerGenericCommand) for xTimerGenericCommand
    timers.o(i.prvProcessReceivedCommands) refers to heap_1.o(i.vPortFree) for vPortFree
    timers.o(i.prvProcessReceivedCommands) refers to queue.o(i.xQueueReceive) for xQueueReceive
    timers.o(i.prvProcessReceivedCommands) refers to timers.o(.data) for xTimerQueue
    timers.o(i.prvProcessTimerOrBlockTask) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    timers.o(i.prvProcessTimerOrBlockTask) refers to timers.o(i.prvSampleTimeNow) for prvSampleTimeNow
    timers.o(i.prvProcessTimerOrBlockTask) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    timers.o(i.prvProcessTimerOrBlockTask) refers to timers.o(i.prvProcessExpiredTimer) for prvProcessExpiredTimer
    timers.o(i.prvProcessTimerOrBlockTask) refers to queue.o(i.vQueueWaitForMessageRestricted) for vQueueWaitForMessageRestricted
    timers.o(i.prvProcessTimerOrBlockTask) refers to timers.o(.data) for pxOverflowTimerList
    timers.o(i.prvSampleTimeNow) refers to tasks.o(i.xTaskGetTickCount) for xTaskGetTickCount
    timers.o(i.prvSampleTimeNow) refers to timers.o(i.prvSwitchTimerLists) for prvSwitchTimerLists
    timers.o(i.prvSampleTimeNow) refers to timers.o(.data) for xLastTime
    timers.o(i.prvSwitchTimerLists) refers to list.o(i.uxListRemove) for uxListRemove
    timers.o(i.prvSwitchTimerLists) refers to list.o(i.vListInsert) for vListInsert
    timers.o(i.prvSwitchTimerLists) refers to timers.o(i.xTimerGenericCommand) for xTimerGenericCommand
    timers.o(i.prvSwitchTimerLists) refers to timers.o(.data) for pxCurrentTimerList
    timers.o(i.prvTimerTask) refers to timers.o(i.prvGetNextExpireTime) for prvGetNextExpireTime
    timers.o(i.prvTimerTask) refers to timers.o(i.prvProcessTimerOrBlockTask) for prvProcessTimerOrBlockTask
    timers.o(i.prvTimerTask) refers to timers.o(i.prvProcessReceivedCommands) for prvProcessReceivedCommands
    timers.o(i.pvTimerGetTimerID) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    timers.o(i.pvTimerGetTimerID) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    timers.o(i.vTimerSetTimerID) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    timers.o(i.vTimerSetTimerID) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    timers.o(i.xTimerCreate) refers to heap_1.o(i.pvPortMalloc) for pvPortMalloc
    timers.o(i.xTimerCreate) refers to timers.o(i.prvInitialiseNewTimer) for prvInitialiseNewTimer
    timers.o(i.xTimerCreateTimerTask) refers to timers.o(i.prvCheckForValidListAndQueue) for prvCheckForValidListAndQueue
    timers.o(i.xTimerCreateTimerTask) refers to tasks.o(i.xTaskCreate) for xTaskCreate
    timers.o(i.xTimerCreateTimerTask) refers to timers.o(.data) for xTimerQueue
    timers.o(i.xTimerCreateTimerTask) refers to timers.o(i.prvTimerTask) for prvTimerTask
    timers.o(i.xTimerGenericCommand) refers to tasks.o(i.xTaskGetSchedulerState) for xTaskGetSchedulerState
    timers.o(i.xTimerGenericCommand) refers to queue.o(i.xQueueGenericSend) for xQueueGenericSend
    timers.o(i.xTimerGenericCommand) refers to queue.o(i.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    timers.o(i.xTimerGenericCommand) refers to timers.o(.data) for xTimerQueue
    timers.o(i.xTimerGetTimerDaemonTaskHandle) refers to timers.o(.data) for xTimerTaskHandle
    timers.o(i.xTimerIsTimerActive) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    timers.o(i.xTimerIsTimerActive) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    port.o(.emb_text) refers to tasks.o(i.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.emb_text) refers to tasks.o(.data) for pxCurrentTCB
    port.o(i.SysTick_Handler) refers to tasks.o(i.xTaskIncrementTick) for xTaskIncrementTick
    port.o(i.prvTaskExitError) refers to port.o(.data) for uxCriticalNesting
    port.o(i.pxPortInitialiseStack) refers to port.o(i.prvTaskExitError) for prvTaskExitError
    port.o(i.vPortEndScheduler) refers to port.o(.data) for uxCriticalNesting
    port.o(i.vPortEnterCritical) refers to port.o(.data) for uxCriticalNesting
    port.o(i.vPortExitCritical) refers to port.o(.data) for uxCriticalNesting
    port.o(i.vPortSetupTimerInterrupt) refers to main.o(.data) for SystemCoreClock
    port.o(i.vPortValidateInterruptPriority) refers to port.o(.emb_text) for vPortGetIPSR
    port.o(i.vPortValidateInterruptPriority) refers to port.o(.data) for ucMaxSysCallPriority
    port.o(i.xPortStartScheduler) refers to port.o(i.vPortSetupTimerInterrupt) for vPortSetupTimerInterrupt
    port.o(i.xPortStartScheduler) refers to port.o(.emb_text) for __asm___6_port_c_39a90d8d__prvEnableVFP
    port.o(i.xPortStartScheduler) refers to port.o(.data) for ucMaxSysCallPriority
    heap_1.o(i.pvPortMalloc) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    heap_1.o(i.pvPortMalloc) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    heap_1.o(i.pvPortMalloc) refers to heap_1.o(.data) for pucAlignedHeap
    heap_1.o(i.pvPortMalloc) refers to heap_1.o(.bss) for ucHeap
    heap_1.o(i.vPortInitialiseBlocks) refers to heap_1.o(.data) for xNextFreeByte
    heap_1.o(i.xPortGetFreeHeapSize) refers to heap_1.o(.data) for xNextFreeByte
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry10a.o(.ARM.Collect$$$$0000000F) for __rt_final_cpp
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry11a.o(.ARM.Collect$$$$00000011) for __rt_final_exit
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry12b.o(.ARM.Collect$$$$0000000E) for __rt_lib_shutdown_fini
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry7b.o(.ARM.Collect$$$$00000008) for _main_clock
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry8b.o(.ARM.Collect$$$$0000000A) for _main_cpp_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry9a.o(.ARM.Collect$$$$0000000B) for _main_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry5.o(.ARM.Collect$$$$00000004) for _main_scatterload
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry2.o(.ARM.Collect$$$$00000001) for _main_stk
    entry2.o(.ARM.Collect$$$$00000001) refers to entry2.o(.ARM.Collect$$$$00002712) for __lit__00000000
    entry2.o(.ARM.Collect$$$$00002712) refers to startup_rvmdk.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to startup_rvmdk.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    entry5.o(.ARM.Collect$$$$00000004) refers to init.o(.text) for __scatterload
    entry9a.o(.ARM.Collect$$$$0000000B) refers to main.o(i.main) for main
    entry9b.o(.ARM.Collect$$$$0000000C) refers to main.o(i.main) for main
    init.o(.text) refers to entry5.o(.ARM.Collect$$$$00000004) for __main_after_scatterload


==============================================================================

Removing Unused input sections from the image.

    Removing startup_rvmdk.o(HEAP), (0 bytes).
    Removing startup_rvmdk.o(.text), (0 bytes).
    Removing main.o(i.led_off), (24 bytes).
    Removing main.o(i.led_on), (28 bytes).
    Removing queue.o(i.prvGetDisinheritPriorityAfterTimeout), (20 bytes).
    Removing queue.o(i.prvInitialiseMutex), (28 bytes).
    Removing queue.o(i.uxQueueMessagesWaiting), (42 bytes).
    Removing queue.o(i.uxQueueMessagesWaitingFromISR), (30 bytes).
    Removing queue.o(i.uxQueueSpacesAvailable), (48 bytes).
    Removing queue.o(i.vQueueDelete), (38 bytes).
    Removing queue.o(i.xQueueAddToSet), (38 bytes).
    Removing queue.o(i.xQueueCreateCountingSemaphore), (92 bytes).
    Removing queue.o(i.xQueueCreateMutex), (34 bytes).
    Removing queue.o(i.xQueueCreateSet), (20 bytes).
    Removing queue.o(i.xQueueGiveFromISR), (246 bytes).
    Removing queue.o(i.xQueueGiveMutexRecursive), (72 bytes).
    Removing queue.o(i.xQueueIsQueueEmptyFromISR), (38 bytes).
    Removing queue.o(i.xQueueIsQueueFullFromISR), (42 bytes).
    Removing queue.o(i.xQueuePeek), (368 bytes).
    Removing queue.o(i.xQueuePeekFromISR), (176 bytes).
    Removing queue.o(i.xQueueReceiveFromISR), (202 bytes).
    Removing queue.o(i.xQueueRemoveFromSet), (48 bytes).
    Removing queue.o(i.xQueueSelectFromSet), (24 bytes).
    Removing queue.o(i.xQueueSelectFromSetFromISR), (22 bytes).
    Removing queue.o(i.xQueueSemaphoreTake), (440 bytes).
    Removing queue.o(i.xQueueTakeMutexRecursive), (78 bytes).
    Removing tasks.o(i.eTaskGetState), (132 bytes).
    Removing tasks.o(i.pcTaskGetName), (48 bytes).
    Removing tasks.o(i.prvTaskIsTaskSuspended), (88 bytes).
    Removing tasks.o(i.pvTaskIncrementMutexHeldCount), (32 bytes).
    Removing tasks.o(i.ulTaskNotifyTake), (116 bytes).
    Removing tasks.o(i.uxTaskGetNumberOfTasks), (12 bytes).
    Removing tasks.o(i.uxTaskPriorityGet), (36 bytes).
    Removing tasks.o(i.uxTaskPriorityGetFromISR), (68 bytes).
    Removing tasks.o(i.uxTaskResetEventItemValue), (28 bytes).
    Removing tasks.o(i.vTaskDelay), (92 bytes).
    Removing tasks.o(i.vTaskDelete), (244 bytes).
    Removing tasks.o(i.vTaskEndScheduler), (36 bytes).
    Removing tasks.o(i.vTaskNotifyGiveFromISR), (240 bytes).
    Removing tasks.o(i.vTaskPlaceOnUnorderedEventList), (108 bytes).
    Removing tasks.o(i.vTaskPriorityDisinheritAfterTimeout), (244 bytes).
    Removing tasks.o(i.vTaskPrioritySet), (276 bytes).
    Removing tasks.o(i.vTaskRemoveFromUnorderedEventList), (164 bytes).
    Removing tasks.o(i.vTaskResume), (144 bytes).
    Removing tasks.o(i.vTaskSetTimeOutState), (60 bytes).
    Removing tasks.o(i.vTaskSuspend), (244 bytes).
    Removing tasks.o(i.xTaskGenericNotify), (260 bytes).
    Removing tasks.o(i.xTaskGenericNotifyFromISR), (324 bytes).
    Removing tasks.o(i.xTaskGetCurrentTaskHandle), (12 bytes).
    Removing tasks.o(i.xTaskGetTickCountFromISR), (20 bytes).
    Removing tasks.o(i.xTaskNotifyStateClear), (52 bytes).
    Removing tasks.o(i.xTaskNotifyWait), (160 bytes).
    Removing tasks.o(i.xTaskPriorityInherit), (200 bytes).
    Removing tasks.o(i.xTaskResumeFromISR), (180 bytes).
    Removing timers.o(i.pcTimerGetName), (32 bytes).
    Removing timers.o(i.prvInitialiseNewTimer), (78 bytes).
    Removing timers.o(i.pvTimerGetTimerID), (44 bytes).
    Removing timers.o(i.vTimerSetTimerID), (44 bytes).
    Removing timers.o(i.xTimerCreate), (48 bytes).
    Removing timers.o(i.xTimerGetExpiryTime), (34 bytes).
    Removing timers.o(i.xTimerGetPeriod), (32 bytes).
    Removing timers.o(i.xTimerGetTimerDaemonTaskHandle), (48 bytes).
    Removing timers.o(i.xTimerIsTimerActive), (56 bytes).
    Removing port.o(i.vPortEndScheduler), (48 bytes).
    Removing heap_1.o(i.vPortInitialiseBlocks), (12 bytes).
    Removing heap_1.o(i.xPortGetFreeHeapSize), (16 bytes).

66 unused section(s) (total 6310 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    RESET                                    0x00000000   Section      648  startup_rvmdk.o(RESET)
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry12b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry2.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry12a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry5.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpyb.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpya.o ABSOLUTE
    FreeRTOS\Source\list.c                   0x00000000   Number         0  list.o ABSOLUTE
    FreeRTOS\Source\portable\MemMang\heap_1.c 0x00000000   Number         0  heap_1.o ABSOLUTE
    FreeRTOS\Source\portable\RVDS\ARM_CM4F\port.c 0x00000000   Number         0  port.o ABSOLUTE
    FreeRTOS\Source\queue.c                  0x00000000   Number         0  queue.o ABSOLUTE
    FreeRTOS\Source\tasks.c                  0x00000000   Number         0  tasks.o ABSOLUTE
    FreeRTOS\Source\timers.c                 0x00000000   Number         0  timers.o ABSOLUTE
    FreeRTOS\\Source\\portable\\RVDS\\ARM_CM4F\\port.c 0x00000000   Number         0  port.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    handlers.s                               0x00000000   Number         0  handlers.o ABSOLUTE
    init.s                                   0x00000000   Number         0  init.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    startup_rvmdk.S                          0x00000000   Number         0  startup_rvmdk.o ABSOLUTE
    $v0                                      0x0000026c   Number         0  startup_rvmdk.o(RESET)
    NmiSR                                    0x00000281   Thumb Code     0  startup_rvmdk.o(RESET)
    FaultISR                                 0x00000283   Thumb Code     0  startup_rvmdk.o(RESET)
    IntDefaultHandler                        0x00000285   Thumb Code     0  startup_rvmdk.o(RESET)
    .ARM.Collect$$$$00000000                 0x00000288   Section        0  entry.o(.ARM.Collect$$$$00000000)
    .ARM.Collect$$$$00000001                 0x00000288   Section        4  entry2.o(.ARM.Collect$$$$00000001)
    .ARM.Collect$$$$00000004                 0x0000028c   Section        4  entry5.o(.ARM.Collect$$$$00000004)
    .ARM.Collect$$$$00000008                 0x00000290   Section        0  entry7b.o(.ARM.Collect$$$$00000008)
    .ARM.Collect$$$$0000000A                 0x00000290   Section        0  entry8b.o(.ARM.Collect$$$$0000000A)
    .ARM.Collect$$$$0000000B                 0x00000290   Section        8  entry9a.o(.ARM.Collect$$$$0000000B)
    .ARM.Collect$$$$0000000E                 0x00000298   Section        4  entry12b.o(.ARM.Collect$$$$0000000E)
    .ARM.Collect$$$$0000000F                 0x0000029c   Section        0  entry10a.o(.ARM.Collect$$$$0000000F)
    .ARM.Collect$$$$00000011                 0x0000029c   Section        0  entry11a.o(.ARM.Collect$$$$00000011)
    .ARM.Collect$$$$00002712                 0x0000029c   Section        4  entry2.o(.ARM.Collect$$$$00002712)
    __lit__00000000                          0x0000029c   Data           4  entry2.o(.ARM.Collect$$$$00002712)
    .emb_text                                0x000002a0   Section      190  port.o(.emb_text)
    $v0                                      0x000002a0   Number         0  port.o(.emb_text)
    .text                                    0x0000035e   Section        0  memcpya.o(.text)
    .text                                    0x00000384   Section       36  init.o(.text)
    i.SysTick_Handler                        0x000003a8   Section        0  port.o(i.SysTick_Handler)
    i.__scatterload_copy                     0x000003dc   Section       14  handlers.o(i.__scatterload_copy)
    i.__scatterload_null                     0x000003ea   Section        2  handlers.o(i.__scatterload_null)
    i.__scatterload_zeroinit                 0x000003ec   Section       14  handlers.o(i.__scatterload_zeroinit)
    i.led_init                               0x000003fc   Section        0  main.o(i.led_init)
    i.led_toggle                             0x00000480   Section        0  main.o(i.led_toggle)
    i.main                                   0x00000498   Section        0  main.o(i.main)
    i.port_init                              0x000004d4   Section        0  main.o(i.port_init)
    i.prvAddCurrentTaskToDelayedList         0x000004fc   Section        0  tasks.o(i.prvAddCurrentTaskToDelayedList)
    prvAddCurrentTaskToDelayedList           0x000004fd   Thumb Code   124  tasks.o(i.prvAddCurrentTaskToDelayedList)
    i.prvAddNewTaskToReadyList               0x00000594   Section        0  tasks.o(i.prvAddNewTaskToReadyList)
    prvAddNewTaskToReadyList                 0x00000595   Thumb Code   150  tasks.o(i.prvAddNewTaskToReadyList)
    i.prvCheckForValidListAndQueue           0x00000648   Section        0  timers.o(i.prvCheckForValidListAndQueue)
    prvCheckForValidListAndQueue             0x00000649   Thumb Code    56  timers.o(i.prvCheckForValidListAndQueue)
    i.prvCheckTasksWaitingTermination        0x00000694   Section        0  tasks.o(i.prvCheckTasksWaitingTermination)
    prvCheckTasksWaitingTermination          0x00000695   Thumb Code    60  tasks.o(i.prvCheckTasksWaitingTermination)
    i.prvCopyDataFromQueue                   0x000006dc   Section        0  queue.o(i.prvCopyDataFromQueue)
    prvCopyDataFromQueue                     0x000006dd   Thumb Code    42  queue.o(i.prvCopyDataFromQueue)
    i.prvCopyDataToQueue                     0x00000706   Section        0  queue.o(i.prvCopyDataToQueue)
    prvCopyDataToQueue                       0x00000707   Thumb Code   124  queue.o(i.prvCopyDataToQueue)
    i.prvDeleteTCB                           0x00000782   Section        0  tasks.o(i.prvDeleteTCB)
    prvDeleteTCB                             0x00000783   Thumb Code    18  tasks.o(i.prvDeleteTCB)
    i.prvGetNextExpireTime                   0x00000794   Section        0  timers.o(i.prvGetNextExpireTime)
    prvGetNextExpireTime                     0x00000795   Thumb Code    36  timers.o(i.prvGetNextExpireTime)
    i.prvIdleTask                            0x000007bc   Section        0  tasks.o(i.prvIdleTask)
    prvIdleTask                              0x000007bd   Thumb Code    32  tasks.o(i.prvIdleTask)
    i.prvInitialiseNewQueue                  0x000007e4   Section        0  queue.o(i.prvInitialiseNewQueue)
    prvInitialiseNewQueue                    0x000007e5   Thumb Code    42  queue.o(i.prvInitialiseNewQueue)
    i.prvInitialiseNewTask                   0x0000080e   Section        0  tasks.o(i.prvInitialiseNewTask)
    prvInitialiseNewTask                     0x0000080f   Thumb Code   170  tasks.o(i.prvInitialiseNewTask)
    i.prvInitialiseTaskLists                 0x000008b8   Section        0  tasks.o(i.prvInitialiseTaskLists)
    prvInitialiseTaskLists                   0x000008b9   Thumb Code    70  tasks.o(i.prvInitialiseTaskLists)
    i.prvInsertTimerInActiveList             0x00000920   Section        0  timers.o(i.prvInsertTimerInActiveList)
    prvInsertTimerInActiveList               0x00000921   Thumb Code    80  timers.o(i.prvInsertTimerInActiveList)
    i.prvIsQueueEmpty                        0x00000978   Section        0  queue.o(i.prvIsQueueEmpty)
    prvIsQueueEmpty                          0x00000979   Thumb Code    26  queue.o(i.prvIsQueueEmpty)
    i.prvIsQueueFull                         0x00000992   Section        0  queue.o(i.prvIsQueueFull)
    prvIsQueueFull                           0x00000993   Thumb Code    30  queue.o(i.prvIsQueueFull)
    i.prvNotifyQueueSetContainer             0x000009b0   Section        0  queue.o(i.prvNotifyQueueSetContainer)
    prvNotifyQueueSetContainer               0x000009b1   Thumb Code   144  queue.o(i.prvNotifyQueueSetContainer)
    i.prvProcessExpiredTimer                 0x00000a40   Section        0  timers.o(i.prvProcessExpiredTimer)
    prvProcessExpiredTimer                   0x00000a41   Thumb Code    94  timers.o(i.prvProcessExpiredTimer)
    i.prvProcessReceivedCommands             0x00000aa4   Section        0  timers.o(i.prvProcessReceivedCommands)
    prvProcessReceivedCommands               0x00000aa5   Thumb Code   240  timers.o(i.prvProcessReceivedCommands)
    i.prvProcessTimerOrBlockTask             0x00000b98   Section        0  timers.o(i.prvProcessTimerOrBlockTask)
    prvProcessTimerOrBlockTask               0x00000b99   Thumb Code   102  timers.o(i.prvProcessTimerOrBlockTask)
    i.prvResetNextTaskUnblockTime            0x00000c0c   Section        0  tasks.o(i.prvResetNextTaskUnblockTime)
    prvResetNextTaskUnblockTime              0x00000c0d   Thumb Code    42  tasks.o(i.prvResetNextTaskUnblockTime)
    i.prvSampleTimeNow                       0x00000c40   Section        0  timers.o(i.prvSampleTimeNow)
    prvSampleTimeNow                         0x00000c41   Thumb Code    40  timers.o(i.prvSampleTimeNow)
    i.prvSwitchTimerLists                    0x00000c6c   Section        0  timers.o(i.prvSwitchTimerLists)
    prvSwitchTimerLists                      0x00000c6d   Thumb Code   150  timers.o(i.prvSwitchTimerLists)
    i.prvTaskExitError                       0x00000d0c   Section        0  port.o(i.prvTaskExitError)
    prvTaskExitError                         0x00000d0d   Thumb Code    60  port.o(i.prvTaskExitError)
    i.prvTimerTask                           0x00000d4c   Section        0  timers.o(i.prvTimerTask)
    prvTimerTask                             0x00000d4d   Thumb Code    26  timers.o(i.prvTimerTask)
    i.prvUnlockQueue                         0x00000d66   Section        0  queue.o(i.prvUnlockQueue)
    prvUnlockQueue                           0x00000d67   Thumb Code   146  queue.o(i.prvUnlockQueue)
    i.pvPortMalloc                           0x00000df8   Section        0  heap_1.o(i.pvPortMalloc)
    i.pxPortInitialiseStack                  0x00000e68   Section        0  port.o(i.pxPortInitialiseStack)
    i.uxListRemove                           0x00000e94   Section        0  list.o(i.uxListRemove)
    i.vListInitialise                        0x00000ebc   Section        0  list.o(i.vListInitialise)
    i.vListInitialiseItem                    0x00000ed6   Section        0  list.o(i.vListInitialiseItem)
    i.vListInsert                            0x00000edc   Section        0  list.o(i.vListInsert)
    i.vListInsertEnd                         0x00000f10   Section        0  list.o(i.vListInsertEnd)
    i.vPeriodicTask                          0x00000f28   Section        0  main.o(i.vPeriodicTask)
    i.vPortEnterCritical                     0x00000f48   Section        0  port.o(i.vPortEnterCritical)
    i.vPortExitCritical                      0x00000f9c   Section        0  port.o(i.vPortExitCritical)
    i.vPortFree                              0x00000fd8   Section        0  heap_1.o(i.vPortFree)
    i.vPortSetupTimerInterrupt               0x00000ffc   Section        0  port.o(i.vPortSetupTimerInterrupt)
    i.vPortValidateInterruptPriority         0x00001024   Section        0  port.o(i.vPortValidateInterruptPriority)
    i.vQueueWaitForMessageRestricted         0x0000109c   Section        0  queue.o(i.vQueueWaitForMessageRestricted)
    i.vTaskDelayUntil                        0x000010e8   Section        0  tasks.o(i.vTaskDelayUntil)
    i.vTaskInternalSetTimeOutState           0x000011bc   Section        0  tasks.o(i.vTaskInternalSetTimeOutState)
    i.vTaskMissedYield                       0x000011d4   Section        0  tasks.o(i.vTaskMissedYield)
    i.vTaskPlaceOnEventList                  0x000011e0   Section        0  tasks.o(i.vTaskPlaceOnEventList)
    i.vTaskPlaceOnEventListRestricted        0x00001218   Section        0  tasks.o(i.vTaskPlaceOnEventListRestricted)
    i.vTaskStartScheduler                    0x00001258   Section        0  tasks.o(i.vTaskStartScheduler)
    i.vTaskSuspendAll                        0x000012ec   Section        0  tasks.o(i.vTaskSuspendAll)
    i.vTaskSwitchContext                     0x000012fc   Section        0  tasks.o(i.vTaskSwitchContext)
    i.xPortStartScheduler                    0x00001388   Section        0  port.o(i.xPortStartScheduler)
    i.xQueueGenericCreate                    0x000014c4   Section        0  queue.o(i.xQueueGenericCreate)
    i.xQueueGenericReset                     0x0000151c   Section        0  queue.o(i.xQueueGenericReset)
    i.xQueueGenericSend                      0x000015b4   Section        0  queue.o(i.xQueueGenericSend)
    i.xQueueGenericSendFromISR               0x0000177c   Section        0  queue.o(i.xQueueGenericSendFromISR)
    i.xQueueReceive                          0x00001884   Section        0  queue.o(i.xQueueReceive)
    i.xTaskCheckForTimeOut                   0x000019ec   Section        0  tasks.o(i.xTaskCheckForTimeOut)
    i.xTaskCreate                            0x00001a78   Section        0  tasks.o(i.xTaskCreate)
    i.xTaskGetSchedulerState                 0x00001ad8   Section        0  tasks.o(i.xTaskGetSchedulerState)
    i.xTaskGetTickCount                      0x00001af8   Section        0  tasks.o(i.xTaskGetTickCount)
    i.xTaskIncrementTick                     0x00001b04   Section        0  tasks.o(i.xTaskIncrementTick)
    i.xTaskPriorityDisinherit                0x00001c4c   Section        0  tasks.o(i.xTaskPriorityDisinherit)
    i.xTaskRemoveFromEventList               0x00001d14   Section        0  tasks.o(i.xTaskRemoveFromEventList)
    i.xTaskResumeAll                         0x00001dac   Section        0  tasks.o(i.xTaskResumeAll)
    i.xTimerCreateTimerTask                  0x00001eb0   Section        0  timers.o(i.xTimerCreateTimerTask)
    i.xTimerGenericCommand                   0x00001f08   Section        0  timers.o(i.xTimerGenericCommand)
    .data                                    0x20000000   Section        4  main.o(.data)
    .data                                    0x20000004   Section       60  tasks.o(.data)
    pxDelayedTaskList                        0x20000008   Data           4  tasks.o(.data)
    pxOverflowDelayedTaskList                0x2000000c   Data           4  tasks.o(.data)
    uxDeletedTasksWaitingCleanUp             0x20000010   Data           4  tasks.o(.data)
    uxCurrentNumberOfTasks                   0x20000014   Data           4  tasks.o(.data)
    xTickCount                               0x20000018   Data           4  tasks.o(.data)
    uxTopReadyPriority                       0x2000001c   Data           4  tasks.o(.data)
    xSchedulerRunning                        0x20000020   Data           4  tasks.o(.data)
    uxPendedTicks                            0x20000024   Data           4  tasks.o(.data)
    xYieldPending                            0x20000028   Data           4  tasks.o(.data)
    xNumOfOverflows                          0x2000002c   Data           4  tasks.o(.data)
    uxTaskNumber                             0x20000030   Data           4  tasks.o(.data)
    xNextTaskUnblockTime                     0x20000034   Data           4  tasks.o(.data)
    xIdleTaskHandle                          0x20000038   Data           4  tasks.o(.data)
    uxSchedulerSuspended                     0x2000003c   Data           4  tasks.o(.data)
    .data                                    0x20000040   Section       20  timers.o(.data)
    pxCurrentTimerList                       0x20000040   Data           4  timers.o(.data)
    pxOverflowTimerList                      0x20000044   Data           4  timers.o(.data)
    xTimerQueue                              0x20000048   Data           4  timers.o(.data)
    xTimerTaskHandle                         0x2000004c   Data           4  timers.o(.data)
    xLastTime                                0x20000050   Data           4  timers.o(.data)
    .data                                    0x20000054   Section       12  port.o(.data)
    uxCriticalNesting                        0x20000054   Data           4  port.o(.data)
    ucMaxSysCallPriority                     0x20000058   Data           1  port.o(.data)
    ulMaxPRIGROUPValue                       0x2000005c   Data           4  port.o(.data)
    .data                                    0x20000060   Section        8  heap_1.o(.data)
    xNextFreeByte                            0x20000060   Data           4  heap_1.o(.data)
    pucAlignedHeap                           0x20000064   Data           4  heap_1.o(.data)
    .bss                                     0x20000068   Section      200  tasks.o(.bss)
    pxReadyTasksLists                        0x20000068   Data         100  tasks.o(.bss)
    xDelayedTaskList1                        0x200000cc   Data          20  tasks.o(.bss)
    xDelayedTaskList2                        0x200000e0   Data          20  tasks.o(.bss)
    xPendingReadyList                        0x200000f4   Data          20  tasks.o(.bss)
    xTasksWaitingTermination                 0x20000108   Data          20  tasks.o(.bss)
    xSuspendedTaskList                       0x2000011c   Data          20  tasks.o(.bss)
    .bss                                     0x20000130   Section       40  timers.o(.bss)
    xActiveTimerList1                        0x20000130   Data          20  timers.o(.bss)
    xActiveTimerList2                        0x20000144   Data          20  timers.o(.bss)
    .bss                                     0x20000158   Section     4096  heap_1.o(.bss)
    ucHeap                                   0x20000158   Data        4096  heap_1.o(.bss)
    STACK                                    0x20001158   Section      256  startup_rvmdk.o(STACK)
    StackMem                                 0x20001158   Data           0  startup_rvmdk.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$E$P$D$K$B$S$7EM$VFPi3$EXTD16$VFPS$VFMA$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$USESV6$~STKCKD$USESV7$~SHL$OSPACE$EBA8$MICROLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __ARM_use_no_argv                        0x00000000   Number         0  main.o ABSOLUTE
    __Vectors                                0x00000000   Data           0  startup_rvmdk.o(RESET)
    __arm_fini_                               - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __decompress                              - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _microlib_exit                            - Undefined Weak Reference
    Reset_Handler                            0x0000026d   Thumb Code     0  startup_rvmdk.o(RESET)
    __main                                   0x00000289   Thumb Code     0  entry.o(.ARM.Collect$$$$00000000)
    _main_stk                                0x00000289   Thumb Code     0  entry2.o(.ARM.Collect$$$$00000001)
    _main_scatterload                        0x0000028d   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    __main_after_scatterload                 0x00000291   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    _main_clock                              0x00000291   Thumb Code     0  entry7b.o(.ARM.Collect$$$$00000008)
    _main_cpp_init                           0x00000291   Thumb Code     0  entry8b.o(.ARM.Collect$$$$0000000A)
    _main_init                               0x00000291   Thumb Code     0  entry9a.o(.ARM.Collect$$$$0000000B)
    __rt_lib_shutdown_fini                   0x00000299   Thumb Code     0  entry12b.o(.ARM.Collect$$$$0000000E)
    __rt_final_cpp                           0x0000029d   Thumb Code     0  entry10a.o(.ARM.Collect$$$$0000000F)
    __rt_final_exit                          0x0000029d   Thumb Code     0  entry11a.o(.ARM.Collect$$$$00000011)
    SVC_Handler                              0x000002a1   Thumb Code    28  port.o(.emb_text)
    __asm___6_port_c_39a90d8d__prvStartFirstTask 0x000002c1   Thumb Code    36  port.o(.emb_text)
    __asm___6_port_c_39a90d8d__prvEnableVFP  0x000002e9   Thumb Code    16  port.o(.emb_text)
    PendSV_Handler                           0x000002fd   Thumb Code    88  port.o(.emb_text)
    vPortGetIPSR                             0x00000359   Thumb Code     6  port.o(.emb_text)
    __aeabi_memcpy                           0x0000035f   Thumb Code    36  memcpya.o(.text)
    __aeabi_memcpy4                          0x0000035f   Thumb Code     0  memcpya.o(.text)
    __aeabi_memcpy8                          0x0000035f   Thumb Code     0  memcpya.o(.text)
    __scatterload                            0x00000385   Thumb Code    28  init.o(.text)
    __scatterload_rt2                        0x00000385   Thumb Code     0  init.o(.text)
    SysTick_Handler                          0x000003a9   Thumb Code    46  port.o(i.SysTick_Handler)
    __scatterload_copy                       0x000003dd   Thumb Code    14  handlers.o(i.__scatterload_copy)
    __scatterload_null                       0x000003eb   Thumb Code     2  handlers.o(i.__scatterload_null)
    __scatterload_zeroinit                   0x000003ed   Thumb Code    14  handlers.o(i.__scatterload_zeroinit)
    led_init                                 0x000003fd   Thumb Code   114  main.o(i.led_init)
    led_toggle                               0x00000481   Thumb Code    14  main.o(i.led_toggle)
    main                                     0x00000499   Thumb Code    48  main.o(i.main)
    port_init                                0x000004d5   Thumb Code    36  main.o(i.port_init)
    pvPortMalloc                             0x00000df9   Thumb Code    98  heap_1.o(i.pvPortMalloc)
    pxPortInitialiseStack                    0x00000e69   Thumb Code    38  port.o(i.pxPortInitialiseStack)
    uxListRemove                             0x00000e95   Thumb Code    40  list.o(i.uxListRemove)
    vListInitialise                          0x00000ebd   Thumb Code    26  list.o(i.vListInitialise)
    vListInitialiseItem                      0x00000ed7   Thumb Code     6  list.o(i.vListInitialiseItem)
    vListInsert                              0x00000edd   Thumb Code    52  list.o(i.vListInsert)
    vListInsertEnd                           0x00000f11   Thumb Code    24  list.o(i.vListInsertEnd)
    vPeriodicTask                            0x00000f29   Thumb Code    30  main.o(i.vPeriodicTask)
    vPortEnterCritical                       0x00000f49   Thumb Code    76  port.o(i.vPortEnterCritical)
    vPortExitCritical                        0x00000f9d   Thumb Code    56  port.o(i.vPortExitCritical)
    vPortFree                                0x00000fd9   Thumb Code    34  heap_1.o(i.vPortFree)
    vPortSetupTimerInterrupt                 0x00000ffd   Thumb Code    36  port.o(i.vPortSetupTimerInterrupt)
    vPortValidateInterruptPriority           0x00001025   Thumb Code   106  port.o(i.vPortValidateInterruptPriority)
    vQueueWaitForMessageRestricted           0x0000109d   Thumb Code    74  queue.o(i.vQueueWaitForMessageRestricted)
    vTaskDelayUntil                          0x000010e9   Thumb Code   200  tasks.o(i.vTaskDelayUntil)
    vTaskInternalSetTimeOutState             0x000011bd   Thumb Code    14  tasks.o(i.vTaskInternalSetTimeOutState)
    vTaskMissedYield                         0x000011d5   Thumb Code     8  tasks.o(i.vTaskMissedYield)
    vTaskPlaceOnEventList                    0x000011e1   Thumb Code    52  tasks.o(i.vTaskPlaceOnEventList)
    vTaskPlaceOnEventListRestricted          0x00001219   Thumb Code    60  tasks.o(i.vTaskPlaceOnEventListRestricted)
    vTaskStartScheduler                      0x00001259   Thumb Code   118  tasks.o(i.vTaskStartScheduler)
    vTaskSuspendAll                          0x000012ed   Thumb Code    12  tasks.o(i.vTaskSuspendAll)
    vTaskSwitchContext                       0x000012fd   Thumb Code   118  tasks.o(i.vTaskSwitchContext)
    xPortStartScheduler                      0x00001389   Thumb Code   288  port.o(i.xPortStartScheduler)
    xQueueGenericCreate                      0x000014c5   Thumb Code    88  queue.o(i.xQueueGenericCreate)
    xQueueGenericReset                       0x0000151d   Thumb Code   146  queue.o(i.xQueueGenericReset)
    xQueueGenericSend                        0x000015b5   Thumb Code   452  queue.o(i.xQueueGenericSend)
    xQueueGenericSendFromISR                 0x0000177d   Thumb Code   264  queue.o(i.xQueueGenericSendFromISR)
    xQueueReceive                            0x00001885   Thumb Code   356  queue.o(i.xQueueReceive)
    xTaskCheckForTimeOut                     0x000019ed   Thumb Code   132  tasks.o(i.xTaskCheckForTimeOut)
    xTaskCreate                              0x00001a79   Thumb Code    96  tasks.o(i.xTaskCreate)
    xTaskGetSchedulerState                   0x00001ad9   Thumb Code    24  tasks.o(i.xTaskGetSchedulerState)
    xTaskGetTickCount                        0x00001af9   Thumb Code     6  tasks.o(i.xTaskGetTickCount)
    xTaskIncrementTick                       0x00001b05   Thumb Code   282  tasks.o(i.xTaskIncrementTick)
    xTaskPriorityDisinherit                  0x00001c4d   Thumb Code   188  tasks.o(i.xTaskPriorityDisinherit)
    xTaskRemoveFromEventList                 0x00001d15   Thumb Code   128  tasks.o(i.xTaskRemoveFromEventList)
    xTaskResumeAll                           0x00001dad   Thumb Code   224  tasks.o(i.xTaskResumeAll)
    xTimerCreateTimerTask                    0x00001eb1   Thumb Code    66  timers.o(i.xTimerCreateTimerTask)
    xTimerGenericCommand                     0x00001f09   Thumb Code   126  timers.o(i.xTimerGenericCommand)
    Region$$Table$$Base                      0x00001f8c   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x00001fac   Number         0  anon$$obj.o(Region$$Table)
    SystemCoreClock                          0x20000000   Data           4  main.o(.data)
    pxCurrentTCB                             0x20000004   Data           4  tasks.o(.data)
    __initial_sp                             0x20001258   Data           0  startup_rvmdk.o(STACK)



==============================================================================

Memory Map of the image

  Image Entry point : 0x0000026d

  Load Region LR_1 (Base: 0x00000000, Size: 0x00002014, Max: 0xffffffff, ABSOLUTE)

    Execution Region ER_RO (Exec base: 0x00000000, Load base: 0x00000000, Size: 0x00001fac, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00000000   0x00000288   Code   RO            3  * RESET               startup_rvmdk.o
    0x00000288   0x00000288   0x00000000   Code   RO          934  * .ARM.Collect$$$$00000000  mc_w.l(entry.o)
    0x00000288   0x00000288   0x00000004   Code   RO          941    .ARM.Collect$$$$00000001  mc_w.l(entry2.o)
    0x0000028c   0x0000028c   0x00000004   Code   RO          944    .ARM.Collect$$$$00000004  mc_w.l(entry5.o)
    0x00000290   0x00000290   0x00000000   Code   RO          946    .ARM.Collect$$$$00000008  mc_w.l(entry7b.o)
    0x00000290   0x00000290   0x00000000   Code   RO          948    .ARM.Collect$$$$0000000A  mc_w.l(entry8b.o)
    0x00000290   0x00000290   0x00000008   Code   RO          949    .ARM.Collect$$$$0000000B  mc_w.l(entry9a.o)
    0x00000298   0x00000298   0x00000004   Code   RO          956    .ARM.Collect$$$$0000000E  mc_w.l(entry12b.o)
    0x0000029c   0x0000029c   0x00000000   Code   RO          951    .ARM.Collect$$$$0000000F  mc_w.l(entry10a.o)
    0x0000029c   0x0000029c   0x00000000   Code   RO          953    .ARM.Collect$$$$00000011  mc_w.l(entry11a.o)
    0x0000029c   0x0000029c   0x00000004   Code   RO          942    .ARM.Collect$$$$00002712  mc_w.l(entry2.o)
    0x000002a0   0x000002a0   0x000000be   Code   RO          824    .emb_text           port.o
    0x0000035e   0x0000035e   0x00000024   Code   RO          937    .text               mc_w.l(memcpya.o)
    0x00000382   0x00000382   0x00000002   PAD
    0x00000384   0x00000384   0x00000024   Code   RO          957    .text               mc_w.l(init.o)
    0x000003a8   0x000003a8   0x00000034   Code   RO          825    i.SysTick_Handler   port.o
    0x000003dc   0x000003dc   0x0000000e   Code   RO          961    i.__scatterload_copy  mc_w.l(handlers.o)
    0x000003ea   0x000003ea   0x00000002   Code   RO          962    i.__scatterload_null  mc_w.l(handlers.o)
    0x000003ec   0x000003ec   0x0000000e   Code   RO          963    i.__scatterload_zeroinit  mc_w.l(handlers.o)
    0x000003fa   0x000003fa   0x00000002   PAD
    0x000003fc   0x000003fc   0x00000084   Code   RO            9    i.led_init          main.o
    0x00000480   0x00000480   0x00000018   Code   RO           12    i.led_toggle        main.o
    0x00000498   0x00000498   0x0000003c   Code   RO           13    i.main              main.o
    0x000004d4   0x000004d4   0x00000028   Code   RO           14    i.port_init         main.o
    0x000004fc   0x000004fc   0x00000098   Code   RO          376    i.prvAddCurrentTaskToDelayedList  tasks.o
    0x00000594   0x00000594   0x000000b4   Code   RO          377    i.prvAddNewTaskToReadyList  tasks.o
    0x00000648   0x00000648   0x0000004c   Code   RO          694    i.prvCheckForValidListAndQueue  timers.o
    0x00000694   0x00000694   0x00000048   Code   RO          378    i.prvCheckTasksWaitingTermination  tasks.o
    0x000006dc   0x000006dc   0x0000002a   Code   RO          149    i.prvCopyDataFromQueue  queue.o
    0x00000706   0x00000706   0x0000007c   Code   RO          150    i.prvCopyDataToQueue  queue.o
    0x00000782   0x00000782   0x00000012   Code   RO          379    i.prvDeleteTCB      tasks.o
    0x00000794   0x00000794   0x00000028   Code   RO          695    i.prvGetNextExpireTime  timers.o
    0x000007bc   0x000007bc   0x00000028   Code   RO          380    i.prvIdleTask       tasks.o
    0x000007e4   0x000007e4   0x0000002a   Code   RO          153    i.prvInitialiseNewQueue  queue.o
    0x0000080e   0x0000080e   0x000000aa   Code   RO          381    i.prvInitialiseNewTask  tasks.o
    0x000008b8   0x000008b8   0x00000068   Code   RO          382    i.prvInitialiseTaskLists  tasks.o
    0x00000920   0x00000920   0x00000058   Code   RO          697    i.prvInsertTimerInActiveList  timers.o
    0x00000978   0x00000978   0x0000001a   Code   RO          154    i.prvIsQueueEmpty   queue.o
    0x00000992   0x00000992   0x0000001e   Code   RO          155    i.prvIsQueueFull    queue.o
    0x000009b0   0x000009b0   0x00000090   Code   RO          156    i.prvNotifyQueueSetContainer  queue.o
    0x00000a40   0x00000a40   0x00000064   Code   RO          698    i.prvProcessExpiredTimer  timers.o
    0x00000aa4   0x00000aa4   0x000000f4   Code   RO          699    i.prvProcessReceivedCommands  timers.o
    0x00000b98   0x00000b98   0x00000074   Code   RO          700    i.prvProcessTimerOrBlockTask  timers.o
    0x00000c0c   0x00000c0c   0x00000034   Code   RO          383    i.prvResetNextTaskUnblockTime  tasks.o
    0x00000c40   0x00000c40   0x0000002c   Code   RO          701    i.prvSampleTimeNow  timers.o
    0x00000c6c   0x00000c6c   0x000000a0   Code   RO          702    i.prvSwitchTimerLists  timers.o
    0x00000d0c   0x00000d0c   0x00000040   Code   RO          826    i.prvTaskExitError  port.o
    0x00000d4c   0x00000d4c   0x0000001a   Code   RO          703    i.prvTimerTask      timers.o
    0x00000d66   0x00000d66   0x00000092   Code   RO          157    i.prvUnlockQueue    queue.o
    0x00000df8   0x00000df8   0x00000070   Code   RO          901    i.pvPortMalloc      heap_1.o
    0x00000e68   0x00000e68   0x0000002c   Code   RO          827    i.pxPortInitialiseStack  port.o
    0x00000e94   0x00000e94   0x00000028   Code   RO           97    i.uxListRemove      list.o
    0x00000ebc   0x00000ebc   0x0000001a   Code   RO           98    i.vListInitialise   list.o
    0x00000ed6   0x00000ed6   0x00000006   Code   RO           99    i.vListInitialiseItem  list.o
    0x00000edc   0x00000edc   0x00000034   Code   RO          100    i.vListInsert       list.o
    0x00000f10   0x00000f10   0x00000018   Code   RO          101    i.vListInsertEnd    list.o
    0x00000f28   0x00000f28   0x0000001e   Code   RO           15    i.vPeriodicTask     main.o
    0x00000f46   0x00000f46   0x00000002   PAD
    0x00000f48   0x00000f48   0x00000054   Code   RO          829    i.vPortEnterCritical  port.o
    0x00000f9c   0x00000f9c   0x0000003c   Code   RO          830    i.vPortExitCritical  port.o
    0x00000fd8   0x00000fd8   0x00000022   Code   RO          902    i.vPortFree         heap_1.o
    0x00000ffa   0x00000ffa   0x00000002   PAD
    0x00000ffc   0x00000ffc   0x00000028   Code   RO          831    i.vPortSetupTimerInterrupt  port.o
    0x00001024   0x00001024   0x00000078   Code   RO          832    i.vPortValidateInterruptPriority  port.o
    0x0000109c   0x0000109c   0x0000004a   Code   RO          162    i.vQueueWaitForMessageRestricted  queue.o
    0x000010e6   0x000010e6   0x00000002   PAD
    0x000010e8   0x000010e8   0x000000d4   Code   RO          392    i.vTaskDelayUntil   tasks.o
    0x000011bc   0x000011bc   0x00000018   Code   RO          395    i.vTaskInternalSetTimeOutState  tasks.o
    0x000011d4   0x000011d4   0x0000000c   Code   RO          396    i.vTaskMissedYield  tasks.o
    0x000011e0   0x000011e0   0x00000038   Code   RO          398    i.vTaskPlaceOnEventList  tasks.o
    0x00001218   0x00001218   0x00000040   Code   RO          399    i.vTaskPlaceOnEventListRestricted  tasks.o
    0x00001258   0x00001258   0x00000094   Code   RO          406    i.vTaskStartScheduler  tasks.o
    0x000012ec   0x000012ec   0x00000010   Code   RO          408    i.vTaskSuspendAll   tasks.o
    0x000012fc   0x000012fc   0x0000008c   Code   RO          409    i.vTaskSwitchContext  tasks.o
    0x00001388   0x00001388   0x0000013c   Code   RO          833    i.xPortStartScheduler  port.o
    0x000014c4   0x000014c4   0x00000058   Code   RO          167    i.xQueueGenericCreate  queue.o
    0x0000151c   0x0000151c   0x00000098   Code   RO          168    i.xQueueGenericReset  queue.o
    0x000015b4   0x000015b4   0x000001c8   Code   RO          169    i.xQueueGenericSend  queue.o
    0x0000177c   0x0000177c   0x00000108   Code   RO          170    i.xQueueGenericSendFromISR  queue.o
    0x00001884   0x00001884   0x00000168   Code   RO          177    i.xQueueReceive     queue.o
    0x000019ec   0x000019ec   0x0000008c   Code   RO          410    i.xTaskCheckForTimeOut  tasks.o
    0x00001a78   0x00001a78   0x00000060   Code   RO          411    i.xTaskCreate       tasks.o
    0x00001ad8   0x00001ad8   0x00000020   Code   RO          415    i.xTaskGetSchedulerState  tasks.o
    0x00001af8   0x00001af8   0x0000000c   Code   RO          416    i.xTaskGetTickCount  tasks.o
    0x00001b04   0x00001b04   0x00000148   Code   RO          418    i.xTaskIncrementTick  tasks.o
    0x00001c4c   0x00001c4c   0x000000c8   Code   RO          421    i.xTaskPriorityDisinherit  tasks.o
    0x00001d14   0x00001d14   0x00000098   Code   RO          423    i.xTaskRemoveFromEventList  tasks.o
    0x00001dac   0x00001dac   0x00000104   Code   RO          424    i.xTaskResumeAll    tasks.o
    0x00001eb0   0x00001eb0   0x00000058   Code   RO          707    i.xTimerCreateTimerTask  timers.o
    0x00001f08   0x00001f08   0x00000084   Code   RO          708    i.xTimerGenericCommand  timers.o
    0x00001f8c   0x00001f8c   0x00000020   Data   RO          959    Region$$Table       anon$$obj.o


    Execution Region ER_RW (Exec base: 0x20000000, Load base: 0x00001fac, Size: 0x00000068, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x00001fac   0x00000004   Data   RW           16    .data               main.o
    0x20000004   0x00001fb0   0x0000003c   Data   RW          427    .data               tasks.o
    0x20000040   0x00001fec   0x00000014   Data   RW          714    .data               timers.o
    0x20000054   0x00002000   0x0000000c   Data   RW          834    .data               port.o
    0x20000060   0x0000200c   0x00000008   Data   RW          906    .data               heap_1.o


    Execution Region ER_ZI (Exec base: 0x20000068, Load base: 0x00002014, Size: 0x000011f0, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000068        -       0x000000c8   Zero   RW          426    .bss                tasks.o
    0x20000130        -       0x00000028   Zero   RW          713    .bss                timers.o
    0x20000158        -       0x00001000   Zero   RW          905    .bss                heap_1.o
    0x20001158        -       0x00000100   Zero   RW            1    STACK               startup_rvmdk.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       146         14          0          8       4096       2139   heap_1.o
       148          0          0          0          0       4674   list.o
       286         44          0          4          0      14937   main.o
       970         90          0         12          0      11601   port.o
      1948         14          0          0          0      23415   queue.o
       648        622          0          0        256        272   startup_rvmdk.o
      2680        352          0         60        200      23767   tasks.o
      1114        108          0         20         40      17271   timers.o

    ----------------------------------------------------------------------
      7946       1244         32        104       4592      98076   Object Totals
         0          0         32          0          0          0   (incl. Generated)
         6          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         0          0          0          0          0          0   entry.o
         0          0          0          0          0          0   entry10a.o
         0          0          0          0          0          0   entry11a.o
         4          0          0          0          0          0   entry12b.o
         8          4          0          0          0          0   entry2.o
         4          0          0          0          0          0   entry5.o
         0          0          0          0          0          0   entry7b.o
         0          0          0          0          0          0   entry8b.o
         8          4          0          0          0          0   entry9a.o
        30          0          0          0          0          0   handlers.o
        36          8          0          0          0         68   init.o
        36          0          0          0          0         68   memcpya.o

    ----------------------------------------------------------------------
       130         16          0          0          0        136   Library Totals
         4          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

       126         16          0          0          0        136   mc_w.l

    ----------------------------------------------------------------------
       130         16          0          0          0        136   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

      8076       1260         32        104       4592      92016   Grand Totals
      8076       1260         32        104       4592      92016   ELF Image Totals
      8076       1260         32        104          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                 8108 (   7.92kB)
    Total RW  Size (RW Data + ZI Data)              4696 (   4.59kB)
    Total ROM Size (Code + RO Data + RW Data)       8212 (   8.02kB)

==============================================================================

